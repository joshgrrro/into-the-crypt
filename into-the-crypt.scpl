text "true" -> mv:true
text "false" -> mv:false

//macros
@set Attack @{

    //initiate flags
    getVariable mv:false -> v:forceenemyattack
    getVariable mv:false -> v:voiddmgmin
    getVariable mv:false -> v:voiddmgalert
    getVariable mv:false -> v:showstatusalert
    
    //initiate delay text
    List[] -> v:playerTurnDelayed
    List[] -> v:postDmgText
    
    //get attack name
    v:SneakAttack
    if Equals mv:true
        text "Sneak Attack" -> v:Attack
    else
        v:Stats:"AttackList"
        chooseFromList @:menuAttackPrompt -> v:Attack
    end
    
    //attack text
    mv:AttackText
    getDictionaryValue Value v:Attack
    showResult
    
    //run attack
    v:Attack
    // WARRIOR ATTACKS ////////////////////////////////
    if Equals "Sword Strike"
        //DMG = STR - enemy.ARM
        v:Stats:"STR"
        Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
    @elseif Equals "Blazing Strike"
        //DMG = 3 × enemy.Weak.Fire + STR - enemy.ARM
        mv:CurrentEnemy:"Weak"
        getDictionaryValue Value "Fire" -> v:weak
        number 3
        Calculate "×" v:weak
        Calculate "+" v:Stats:"STR"
        Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
    @elseif Equals "Blazing Strike"
        //DMG = 3 × enemy.Weak.Holy + STR - enemy.ARM
        mv:CurrentEnemy:"Weak"
        getDictionaryValue Value "Holy" -> v:weak
        number 3
        Calculate "×" v:weak
        Calculate "+" v:Stats:"STR"
        Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
    @elseif Equals "Mighty Counter"
        //DMG = STR + 2 - enemy.ARM
        v:Stats:"STR"
        Calculate "+" 2
        Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
        //additional text
        List["You strike back!" "The \(mv:CurrentEnemy:"Name") took \(v:DMG) damage!"]
        addToVariable v:playerTurnDelayed
        //flags
        getVariable mv:true -> v:forceenemyattack
        getVariable mv:true -> v:voiddmgalert
    @elseif Equals "Mighty Vengeance"
        //DMG = STR × CRIT - enemy.ARM
        v:Stats:"STR"
        Calculate "×" v:Stats:"CRIT"
        Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
        //additional text
        List["You strike back!" "The \(mv:CurrentEnemy:"Name") took \(v:DMG) damage!"]
        addToVariable v:playerTurnDelayed
        //flags
        getVariable mv:true -> v:forceenemyattack
        getVariable mv:true -> v:voiddmgalert
    @elseif Equals "Etherblade"
        //DMG = MAG × CRIT - enemy.RES
        v:Stats:"MAG"
        Calculate "×" v:Stats:"CRIT"
        Calculate "-" mv:CurrentEnemy:"RES" -> v:DMG
    @elseif Equals "Knight's Wrath"
        //selfDMG = STR - ARM
        v:Stats:"STR"
        Calculate "-" v:Stats:"ARM" -> v:DMG
        if IsLessThan 1
            number 1 -> v:DMG
        end
        v:Stats:"HP"
        Calculate "-" v:DMG -> v:NewHP
        v:Stats
        setDictionaryValue "HP" v:NewHP -> v:Stats
        //DMG = STR × CRIT
        v:Stats:"STR"
        Calculate "×" v:Stats:"CRIT" -> v:DMG
        //additional text
        text "You took \(v:DMG) damage from the recoil!"
        addToVariable v:postDmgText
    @elseif Equals "Heroic Maneuver"
        //odds = STR : enemy.DEX
        v:Stats:"STR"
        Calculate "+" mv:CurrentEnemy:"DEX" -> v:odds
        randomNumber 0 v:odds
        if IsLessThan v:Stats:"STR"
            //DMG = STR + DEX - enemy.ARM
            v:Stats:"STR"
            Calculate "+" v:Stats:"DEX"
            Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
            //additional text
            showResult "...and you nailed it!"
        else
            //DMG = 0
            number 0 -> v:DMG
            //flag
            getVariable mv:true -> v:voiddmgmin
            //additional text
            showResult "...but it failed!"
        end
    // THIEF ATTACKS //////////////////////////////////
    @elseif Equals "Swift Stab"
        //DMG = DEX - enemy.ARM
        v:Stats:"DEX"
        Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
    @elseif Equals "Killer Instinct"
        //DMG = DEX
        v:Stats:"DEX"
        setVariable v:DMG
    @elseif Equals "Tricky Step"
        //odds = 45% + (5% × LUCK)
        v:Stats:"LUCK"
        Calculate "+" 9 -> v:odds
        randomNumber 0 20
        if IsLessThan v:odds
            //DMG = DEX × CRIT - enemy.ARM
            v:Stats:"DEX"
            Calculate "×" v:Stats:"CRIT"
            Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
            //additional text
            showResult mv:AttackText:"TrickyStepSuccess"
        else
            //DMG = 0
            number 0 -> v:DMG
            //flag
            getVariable mv:true -> v:voiddmgmin
            //additional text
            showResult mv:AttackText:"TrickyStepFail"
        end
    @elseif Equals "Thief's Cunning"
        //odds = 65% + (5% × LUCK)
        v:Stats:"LUCK"
        Calculate "+" 13 -> v:odds
        randomNumber 0 20
        if IsLessThan v:odds
            //DMG = DEX × CRIT - enemy.ARM
            v:Stats:"DEX"
            Calculate "×" v:Stats:"CRIT"
            Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
            //additional text
            showResult mv:AttackText:"TrickyStepSuccess"
        else
            //DMG = 0
            number 0 -> v:DMG
            //flag
            getVariable mv:true -> v:voiddmgmin
            //additional text
            showResult mv:AttackText:"TrickyStepFail"
        end
    @elseif Equals "Dirty Trick"
        //odds = 45% + (5% × LUCK)
        v:Stats:"LUCK"
        Calculate "+" 9 -> v:odds
        randomNumber 0 20
        if IsLessThan v:odds
            //DMG = DEX × (CRIT + 1) - enemy.ARM
            v:Stats:"DEX"
            Calculate "×" v:Stats:"CRIT"
            Calculate "+" v:Stats:"DEX"
            Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
            //additional text
            showResult mv:AttackText:"TrickyStepSuccess"
        else
            //DMG = 0
            number 0 -> v:DMG
            //flag
            getVariable mv:true -> v:voiddmgmin
            //additional text
            showResult mv:AttackText:"TrickyStepFail"
        end
    @elseif Equals "Longshot"
        //odds = 5% + (5% × LUCK)
        v:Stats:"LUCK"
        Calculate "+" 1 -> v:odds
        randomNumber 0 20
        if IsLessThan v:odds
            //DMG = 100
            number 100 -> v:DMG
            //additional text
            showResult mv:AttackText:"LongshotSuccess"
        else
            //DMG = 1
            number 1 -> v:DMG
            //additional text
            showResult mv:AttackText:"LongshotFail"
        end
    @elseif Equals "Rogue's Gambit"
        //odds = 70% + (5% × LUCK)
        v:Stats:"LUCK"
        Calculate "+" 14 -> v:odds
        randomNumber 0 20
        if IsLessThan v:odds
            //DMG = DEX × CRIT
            v:Stats:"DEX"
            Calculate "×" v:Stats:"CRIT" -> v:DMG
            //additional text
            showResult mv:AttackText:"GambitSuccess"
        else
            //selfDMG = DEX - ARM
            v:Stats:"DEX"
            Calculate "-" v:Stats:"ARM" -> v:DMG
            v:Stats:"HP"
            Calculate "-" v:DMG -> v:NewHP
            v:Stats
            setDictionaryValue "HP" v:NewHP -> v:Stats
            //additional text
            showResult mv:AttackText:"GambitFail"
            showResult "You took \(v:DMG) damage!"
            //DMG = 0
            number 0 -> v:DMG
            //flag
            getVariable mv:true -> v:voiddmgmin
        end
    @elseif Equals "Deep Lunge"
        //DMG = STR × CRIT - enemy.ARM
        v:Stats:"STR"
        Calculate "×" v:Stats:"CRIT"
        Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
    // MAGICIAN ATTACKS ///////////////////////////////
    @elseif Equals "Ancient Fire"
        //DMG = MAG × enemy.Weak.Fire - enemy.RES
        mv:CurrentEnemy:"Weak"
        getDictionaryValue Value "Fire" -> v:weak
        v:Stats:"MAG"
        Calculate "×" v:weak
        Calculate "-" mv:CurrentEnemy:"RES" -> v:DMG
        //Status.Burn odds = MAG : enemy.MAG + enemy.RES
        v:Stats:"MAG"
        Calculate "+" mv:CurrentEnemy:"RES"
        Calculate "+" mv:CurrentEnemy:"MAG" -> v:odds
        randomNumber 0 v:odds
        if IsLessThan v:Stats:"MAG"
            @:statusSetBurn
            getVariable mv:true -> v:showstatusalert
        end
    @elseif Equals "Eldest Fire"
        //DMG = (MAG + 3) × enemy.Weak.Fire - enemy.RES
        mv:CurrentEnemy:"Weak"
        getDictionaryValue Value "Fire" -> v:weak
        v:Stats:"MAG"
        Calculate "+" 3
        Calculate "×" v:weak
        Calculate "-" mv:CurrentEnemy:"RES" -> v:DMG
        //Status.Burn odds = MAG : enemy.MAG + enemy.RES
        v:Stats:"MAG"
        Calculate "+" mv:CurrentEnemy:"RES"
        Calculate "+" mv:CurrentEnemy:"MAG" -> v:odds
        randomNumber 0 v:odds
        if IsLessThan v:Stats:"MAG"
            @:statusSetBurn
            getVariable mv:true -> v:showstatusalert
        end
    @elseif Equals "Hellfrost"
        //DMG = MAG × enemy.Weak.Ice - enemy.RES
        mv:CurrentEnemy:"Weak"
        getDictionaryValue Value "Ice" -> v:weak
        v:Stats:"MAG"
        Calculate "×" v:weak
        Calculate "-" mv:CurrentEnemy:"RES" -> v:DMG
        //Status.Freeze odds = MAG : enemy.MAG + enemy.RES
        v:Stats:"MAG"
        Calculate "+" mv:CurrentEnemy:"RES"
        Calculate "+" mv:CurrentEnemy:"MAG" -> v:odds
        randomNumber 0 v:odds
        if IsLessThan v:Stats:"MAG"
            @:statusSetFreeze
            getVariable mv:true -> v:showstatusalert
        end
    @elseif Equals "Daemonfrost"
        //DMG = (MAG + 3) × enemy.Weak.Ice - enemy.RES
        mv:CurrentEnemy:"Weak"
        getDictionaryValue Value "Ice" -> v:weak
        v:Stats:"MAG"
        Calculate "+" 3
        Calculate "×" v:weak
        Calculate "-" mv:CurrentEnemy:"RES" -> v:DMG
        //Status.Freeze odds = MAG : enemy.MAG + enemy.RES
        v:Stats:"MAG"
        Calculate "+" mv:CurrentEnemy:"RES"
        Calculate "+" mv:CurrentEnemy:"MAG" -> v:odds
        randomNumber 0 v:odds
        if IsLessThan v:Stats:"MAG"
            @:statusSetFreeze
            getVariable mv:true -> v:showstatusalert
        end
    @elseif Equals "Shadowcurse"
        //DMG = MAG - 1
        v:Stats:"MAG"
        Calculate "-" 1 -> v:DMG
        //Status.Curse odds = MAG : enemy.MAG + enemy.RES
        v:Stats:"MAG"
        Calculate "+" mv:CurrentEnemy:"RES"
        Calculate "+" mv:CurrentEnemy:"MAG" -> v:odds
        randomNumber 0 v:odds
        if IsLessThan v:Stats:"MAG"
            @:statusSetCurse
            getVariable mv:true -> v:showstatusalert
        end
    @elseif Equals "Chant of the Vampire"
        //DMG = MAG - (enemy.ARM + enemy.RES)
        v:Stats:"MAG"
        Calculate "-" mv:CurrentEnemy:"ARM"
        Calculate "-" mv:CurrentEnemy:"RES" -> v:DMG
        if IsGreaterThan 0
            v:DMG
            if IsGreaterThan v:EnemyHP
                v:EnemyHP
                setVariable v:DMG
            end
            v:Stats:"HP"
            Calculate "+" v:DMG -> v:NewHP
            v:Stats
            setDictionaryValue "HP" v:NewHP -> v:Stats
            //flag
            getVariable mv:true -> v:voiddmgalert
            //additional text
            showResult "You siphoned \(v:DMG) HP from the \(mv:CurrentEnemy:"Name")!"
        else
            number 0 -> v:DMG
            //flag
            getVariable mv:true -> v:voiddmgmin
        end
    @elseif Equals "Thorn"
        //DMG = enemy.ARM × CRIT
        mv:CurrentEnemy:"ARM"
        Calculate "×" v:Stats:"CRIT" -> v:DMG
    @elseif Equals "Wizardsbane"
        //DMG = MAG + STR - enemy.ARM
        v:Stats:"MAG"
        Calculate "+" v:Stats:"STR"
        Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
    // BARD ATTACKS ///////////////////////////////////
    @elseif Equals "Chorus of Chaos"
        number 3 -> v:DMG
    @elseif Equals "Confusing Chord"
        number 3 -> v:DMG
    @elseif Equals "Serenade"
        number 3 -> v:DMG
    @elseif Equals "Tune of Terror"
        number 3 -> v:DMG
    @elseif Equals "Leech's Lymeric"
        number 3 -> v:DMG
    @elseif Equals "Balld of Dawnbreak"
        number 3 -> v:DMG
    @elseif Equals "Lina's Lullaby"
        number 3 -> v:DMG
    @elseif Equals "Daemon's Dirge"
        number 3 -> v:DMG
    // SNEAK ATTACKS //////////////////////////////////
    @elseif Equals "Sneak Attack"
        v:Class
        if Equals "Warrior"
            //DMG = STR × CRIT - enemy.ARM
            v:Stats:"STR"
            Calculate "×" v:Stats:"CRIT" 
            Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
        @elseif Equals "Thief"
            //DMG = DEX × CRIT - enemy.ARM
            v:Stats:"DEX"
            Calculate "×" v:Stats:"CRIT" 
            Calculate "-" mv:CurrentEnemy:"ARM" -> v:DMG
        @elseif Equals "Magician"
            //DMG = MAG × CRIT - enemy.RES
            v:Stats:"MAG"
            Calculate "×" v:Stats:"CRIT" 
            Calculate "-" mv:CurrentEnemy:"RES" -> v:DMG
        @elseif Equals "Bard"
            //DMG = MAG × CRIT - enemy.RES
            v:Stats:"MAG"
            Calculate "×" v:Stats:"CRIT" 
            Calculate "-" mv:CurrentEnemy:"RES" -> v:DMG
        end
    end
    
    //floor damage at 1
    v:voiddmgmin
    if Equals mv:false
        v:DMG
        if IsLessThan 1
            number 1 -> v:DMG
        end
    end
    
    //apply damage
    v:EnemyHP
    Calculate "-" v:DMG -> v:EnemyHP
    
    //show damage alert
    v:voiddmgalert
    if Equals mv:false
        @:showDamage
    end
    
    //post-damage text
    v:postDmgText
    @:showList
    
    //check if enemy is dead
    v:EnemyHP
    if IsLessThan 1
        v:forceenemyattack
        if Equals mv:false
            getVariable mv:true -> v:break
        end
        getVariable mv:false -> v:showstatusalert
    end
    
    //show status alert
    v:showstatusalert
    if Equals mv:true
        showResult v:StatusAlert
    end
    
}

@set enemyAttack @{

    //calculate enemy damage
    mv:CurrentEnemy:"Class"
    if Equals "Warrior"
        //DMG = STR - player.ARM
        mv:CurrentEnemy:"STR"
        Calculate "-" v:Stats:"ARM" -> v:DMG
    @elseif Equals "Thief"
        //DMG = DEX - player.ARM
        mv:CurrentEnemy:"DEX"
        Calculate "-" v:Stats:"ARM" -> v:DMG
    @elseif Equals "Magician"
        //DMG = MAG - player.RES
        mv:CurrentEnemy:"MAG"
        Calculate "-" v:Stats:"RES" -> v:DMG
    end
    
    //always do at least 1 damage
    if IsLessThan 1
        number 1 -> v:DMG
    end
    
    //apply damage
    v:Stats:"HP"
    setVariable v:OldHP
    Calculate "-" v:DMG -> v:NewHP
    v:Stats
    setDictionaryValue "HP" v:NewHP -> v:Stats
    
    //attack text
    showResult "\(mv:CurrentEnemy:"AttackText") You took \(v:DMG) damage!"
    
    //check if dead or critical health
    v:Stats:"HP"
    if IsLessThan 1
        getVariable mv:true -> v:break
    else
        v:OldHP
        if IsGreaterThan 5
            v:NewHP
            if IsLessThan 6
                showResult "You're barely hanging on!"
            end
        end
    end
    
}

@set enemyStatus @{

    v:EnemyStatus
    
    if Equals "Burn"
        //apply damage
        v:EnemyHP
        Calculate "-" 1 -> v:EnemyHP
        //status text
        showResult "The \(mv:CurrentEnemy:"Name") took 2 damage from its Burn!"
        
    @elseif Equals "Freeze"
        //status text
        showResult "The \(mv:CurrentEnemy:"Name") is Frozen and can't attack!"
        
    @elseif Equals "Poison"
        //apply damage
        v:EnemyHP
        Calculate "-" 2 -> v:EnemyHP
        //status text
        showResult "The \(mv:CurrentEnemy:"Name") took 1 damage from Poisoning!"
        
    @elseif Equals "Curse"
        //apply damage
        number 10
        Calculate "-" v:EnemyStatusTimer -> v:DMG
        v:EnemyHP
        Calculate "-" v:DMG -> v:EnemyHP
        //status text
        showResult "The \(mv:CurrentEnemy:"Name") took \(v:DMG) damage from being Cursed!"
        
    end
    
}

@set enemyDie @{

    //update flags/counters
    getVariable mv:true -> v:KilledEnemy
    v:KillCount
    Calculate "+" 1 -> v:KillCount
    
    //killed enemy
    showResult "You defeated the \(mv:CurrentEnemy:"Name")!"
    
    //gold
    mv:CurrentEnemy:"Gold"
    getItemFromList RandomItem -> v:enemygold
    v:Gold
    Calculate "+" v:enemygold -> v:Gold
    showResult "The \(mv:CurrentEnemy:"Name") dropped \(v:enemygold) gold!"
    
    //show investigate text
    v:HasInvestigated
    if Equals mv:false
        @:showInterest
    end
    
    //reset state
    text "Choose" -> v:State
}

@set statusSetBurn @{
    text "Burn" -> v:EnemyStatus
    number 3 -> v:EnemyStatusTimer
    text "The \(mv:CurrentEnemy:"Name") was Burned!" -> v:StatusAlert
}
@set statusSetFreeze @{
    text "Freeze" -> v:EnemyStatus
    number 2 -> v:EnemyStatusTimer
    text "The \(mv:CurrentEnemy:"Name") was Frozen!" -> v:StatusAlert
}
@set statusSetPoison @{
    text "Poison" -> v:EnemyStatus
    number 2 -> v:EnemyStatusTimer
    text "The \(mv:CurrentEnemy:"Name") was Poisoned!" -> v:StatusAlert
}
@set statusSetCurse @{
    text "Curse" -> v:EnemyStatus
    number 9 -> v:EnemyStatusTimer
    text "The \(mv:CurrentEnemy:"Name") was Cursed!" -> v:StatusAlert
}

@set Upgrade1 @{
    v:Upgrade3
    if Equals mv:false
        @:text1Upgrade1
    else
        @:text1Upgrade2
    end
    @:text1Upgrade3
    @:getTwoMoves
    chooseFromList @:menuLearnPrompt -> v:newattack
    addToVariable v:NewAttackList
    v:Stats
    setDictionaryValue "AttackList" v:NewAttackList -> v:Stats
    @:text1Upgrade4
    getVariable mv:true -> v:Upgrade1
}

@set Upgrade2 @{
    @:text2Upgrade1
    @:getTwoMoves
    chooseFromList @:menuLearnPrompt -> v:newattack
    addToVariable v:NewAttackList
    v:Stats
    setDictionaryValue "AttackList" v:NewAttackList -> v:Stats
    @:text2Upgrade2
    getVariable mv:true -> v:Upgrade2
}

@set Upgrade3 @{
    v:Upgrade1
    if Equals mv:false
        @:text3Upgrade1
    else
        @:text3Upgrade2
    end
    @:text3Upgrade3
    mv:Gifts
    getDictionaryValue Value v:Class
    chooseFromList @:menuUpgradePrompt -> v:gift
    if Equals "Fireblade"
        text "Sword Strike" -> v:oldmove
        text "Blazing Strike" -> v:newmove
    @elseif Equals "Sacred Steel"
        text "Sword Strike" -> v:oldmove
        text "Divine Strike" -> v:newmove
    @elseif Equals "Sabre of the Champion"
        text "Mighty Counter" -> v:oldmove
        text "Mighty Vengeance" -> v:newmove
    @elseif Equals "Seer's Charm"
        text "Tricky Step" -> v:oldmove
        text "Thief's Cunning" -> v:newmove
    @elseif Equals "Jagged Edge"
        text "Tricky Step" -> v:oldmove
        text "Dirty Trick" -> v:newmove
    @elseif Equals "Hollow Knife"
        text "Swift Stab" -> v:oldmove
        text "Killer Instinct" -> v:newmove
    @elseif Equals "Ember Pendant"
        text "Ancient Fire" -> v:oldmove
        text "Eldest Fire" -> v:newmove
    @elseif Equals "Ice Diadem"
        text "Hellfrost" -> v:oldmove
        text "Daemonfrost" -> v:newmove
    @elseif Equals "Oath of Shadow"
        text "Ancient Fire" -> v:oldmove
        text "Shadowcurse" -> v:newmove
    end
    @:replaceMove
    @:text3Upgrade4
    getVariable mv:true -> v:Upgrade3
}

@set getTwoMoves @{
    v:Stats:"AttackList"
    setVariable v:NewAttackList
    List[] -> v:draw1
    List[] -> v:draw2
    List[] -> v:UpgradeList
    mv:AdditionalMoves
    getDictionaryValue Value v:Class
    repeatWithEach
        setVariable v:move
        getVariable mv:false -> v:flag
        v:Stats:"AttackList"
        repeatWithEach
            if Equals v:move
                getVariable mv:true -> v:flag
            end
        end
        v:flag
        if Equals mv:false
            v:move
            addToVariable v:draw1
        end
    end
    v:draw1
    getItemFromList RandomItem
    addToVariable v:UpgradeList
    v:draw1
    repeatWithEach
        if Equals v:UpgradeList
            Nothing
        else
            addToVariable v:draw2
        end
    end
    v:draw2
    getItemFromList RandomItem
    addToVariable v:UpgradeList
}

@set replaceMove @{

    //set v:oldmove and v:newmove before calling
    
    //find and replace oldattack in list
    List[] -> v:NewAttackList
    v:Stats:"AttackList"
    repeatWithEach
        if Equals v:oldmove
            v:newmove
            addToVariable v:NewAttackList
        else
            addToVariable v:NewAttackList
        end
    end
    v:Stats
    setDictionaryValue "AttackList" v:NewAttackList -> v:Stats
    
    //special case, Shadowcurse
    v:newmove
    if Equals "Shadowcurse"
        List[] -> v:NewAttackList
        v:Stats:"AttackList"
        repeatWithEach
            if Equals "Hellfrost"
                Nothing
            else
                addToVariable v:NewAttackList
            end
        end
        v:Stats
        setDictionaryValue "AttackList" v:NewAttackList -> v:Stats
    end
    
}

@set showList @{
    repeatWithEach
        showResult
    end
}

//// GAME TEXT ////////////////

//Intro
@set textIntro1 @{
    showResult "You examine the narrow stone archway leading into the darkness. From behind you comes a voice."
    showResult "\"You want to stay out of there,\" the voice growls."
    showResult "You turn around to find a decrepit grave keeper leaning heavily on a rusty shovel and shielding his face from the heavy rain with his free hand."
    showResult "\"Something terrible,\" he rasps, \"haunts that Crypt. ...You'd better at least have a weapon.\""
}
@set promptChooseClass "How do you respond?"
@set textChooseWarrior "I have a sword."
@set textChooseThief "I have a dagger."
@set textChooseMagician "I have a staff."
@set textChooseBard "I have a lute."

//Upgrade 1
@set text1Upgrade1 @{
    showResult "A tall, cloaked man stands waiting in the stairwell."
    showResult "\"I've been watching you, \(v:Class).\""
}
@set text1Upgrade2 @{
    showResult "Waiting in the stairwell is the tall, cloaked man."
    showResult "\"Hello again, \(v:Class).\""
}
@set text1Upgrade3 @{
    showResult "\"You are an exceptional fighter. Such savage drive to survive... it is admirable.\""
    showResult "\"I wish to teach you one of the skills I've gathered here in the Crypt. Tell me, what would you like to learn?\""
}
@set text1Upgrade4 @{
    showResult "\"A... fascinating choice. Focus, and receive my knowledge.\""
    showResult "You learned \(v:newattack)!"
    showResult "You continue down the staircase."
}

//Upgrade 2
@set text2Upgrade1 @{
    showResult "Waiting in the stairwell is the tall, cloaked man."
    showResult "\"Hello again, \(v:Class).\""
    showResult "\"Your vigor for battle continually... surprises me.\""
    showResult "\"I wish to teach you one more of the skills I've gathered in the Crypt. Tell me, what would you like to learn?\""
}
@set text2Upgrade2 @{
    showResult "\"Really... you do intrigue me. Focus, and receive my knowledge.\""
    showResult "You learned \(v:newattack)!"
    showResult "You continue down the staircase."
}

//Upgrade 3
@set text3Upgrade1 @{
    showResult "A tall, cloaked man stands waiting in the stairwell."
    showResult "\"I've been watching you, \(v:Class).\""
}
@set text3Upgrade2 @{
    showResult "Waiting in the stairwell is the tall, cloaked man."
    showResult "\"We meet again, \(v:Class).\""
}
@set text3Upgrade3 @{
    showResult "\"You seem to have quite the appetite for adventure... Interesting.\""
    showResult "\"I wish to share with you a treasure I've gathered here in the Crypt. Tell me, what would you like to gain?\""
}
@set text3Upgrade4 @{
    showResult "\"I see...\""
    showResult "You received \(v:gift)!"
    showResult "You continue down the staircase."
}

//Ending
@set textEnding1 "The Crypt is too dark to even see down here."
@set textEndingInvestigate "You fumble around the room."
@set textEndingExit "You move blindly through the darkness."
@set textEnding2 @{
    showResult "\"Well, well, well...\" comes a familiar voice from behind you. \"I have to admit, when I met you on the surface I didn't believe you had it in you. But here you are.\""
    showResult "You turn around and see the grave keeper's face, gruesome and rotting, peering at you over a dying candle."
    showResult "He draws closer. You can't move."
    showResult "\"I did warn you.\""
    showResult "There is a sharp, steely pain in your gut, and you collapse to the floor."
    showResult "\"Steel and bone, steel and bone...\" hums the grave keeper. \"You fool. Don't you know all you'll find in a Crypt... is death?\" Slowly, he raises his shovel above your blanching face."
}

//Menu text
@set menuActionPrompt "What will you do?"
@set menuAttackPrompt "Which attack?"
@set menuFight "Attack"
@set menuSneak "Sneak"
@set menuSneakAttack "Sneak Attack"
@set menuInvestigate "Investigate"
@set menuExit "Next Floor"
@set menuLearnPrompt "What will you learn?"
@set menuUpgradePrompt "What will you choose?"

//Alert text
@set showEventEnemy @{
    showResult "You enter into \(v:Setting). A \(mv:CurrentEnemy:"Name") lurks on the other end of the room."
}
@set showEventAmbush @{
    showResult "You enter into \(v:Setting). A \(mv:CurrentEnemy:"Name") is coming right at you!"
}
@set showDead @{
    showResult "You can't carry on..."
}
@set showDamage @{
    showResult "The \(mv:CurrentEnemy:"Name") took \(v:DMG) damage!"
    }
@set showInterest @{
    showResult "Looking around, you see a \(v:Interest) \(v:Location)."
}

//Difficulty alerts
@set textDifficultyNormal "The Crypt seems to be even darker down here."
@set textDifficultyHard "The odor of the Crypt is stronger down here."
@set textDifficultyHarder "The walls of the Crypt down here seem to have the chill of death."
@set textDifficultyFinal "The air in the Crypt is thick with a sickening darkness down here."

//The Noise
@set textNoise1 "You hear the faint din of a terrible Noise."
@set textNoise2 "A terrible Noise echoes from the floor above you."
@set textNoise3 "A terrible Noise sounds from the stairwell behind you."
@set textNoise4 "A bone-chilling Noise rings from the hall behind you!"
@set textNoise5 "A horrific Noise screeches in the entryway!"
@set textNoise6 @{
    showResult "The Noise grows to a horrifying roar and overtakes you!"
    showResult "There is a sharp pain in your skull, and you are consumed by the darkness."
}

//Additional moves
Dictionary {
    "Warrior":["Etherblade" "Knight's Wrath" "Heroic Maneuver"]
    "Thief":["Longshot" "Rogue's Gambit" "Deep Lunge"]
    "Magician":["Chant of the Vampire" "Thorn" "Wizardsbane"]
    "Bard":["Serenade" "Tune of Terror" "Leech's Lymeric" "Ballad of Dawnbreak" "Lina's Lullaby" "Daemon's Dirge"]
} -> mv:AdditionalMoves

//Gifts
Dictionary {
    "Warrior":["Fireblade" "Sacred Steel" "Sabre of the Champion"]
    "Thief":["Seer's Charm" "Jagged Edge" "Hollow Knife"]
    "Magician":["Ember Pendant" "Ice Diadem" "Oath of Shadow"]
    "Bard":["Dragon Heartstrings"]
} -> mv:Gifts

//Attack text
Dictionary {
    "Sword Strike":"You swing your mighty sword!"
    "Blazing Strike":"You swing your flaming sword!"
    "Divine Strike":"You swing your blessed sword!"
    "Mighty Counter":"You wait to strike..."
    "Mighty Vengeance":"You wait to strike..."
    "Etherblade":"Your blade glows with an arcane light. You swing your sword!"
    "Knight's Wrath":"You attack with a furious rage!"
    "Heroic Maneuver":"You execute a daring parry!"
    "Swift Stab":"Your blade flashes!"
    "Killer Instinct":"You strike viciously!"
    "Tricky Step":"You attempt a difficult dodge and strike..."
    "TrickyStepSuccess":"...and you nailed it!"
    "TrickyStepFail":"...but it failed!"
    "Thief's Cunning":"You gracefully slide into a dodge and strike..."
    "Dirty Trick":"You brandish your knife for a dodge and strike..."
    "Longshot":"You go in for the kill..."
    "LongshotSuccess":"...and you nailed it!"
    "LongshotFail":"...but it failed!"
    "Rogue's Gambit":"You attempt a risky maneuver..."
    "GambitSuccess":"...and you nailed it!"
    "GambitFail":"...but you hurt yorself instead!"
    "Deep Lunge":"You thrust your blade with all your might!"
    "Ancient Fire":"You conjure a searing flame!"
    "Eldest Fire":"You conjure a roaring blaze!"
    "Hellfrost":"You summon a chilling frost from beyond!"
    "Daemonfrost":"You summon a blizzard from beyond!"
    "Shadowcurse":"You raise your staff, and your eyes turn a glassy black."
    "Chant of the Vampire":"You utter the forbidden curse..."
    "Thorn":"Your staff flashes. An eerie light surrounds the enemy!"
    "Wizardsbane":"You grip your staff and swing it violently!"
    "Sneak Attack":"You strike from the shadows!"
    "Chorus of Chaos":"You strum an enchanting, complicated chorus on your lute."
    "Confusing Chord":"You pluck an incomprehnsible cluster of notes."
    "Serenade":"You sing a bewitching song of love."
    "Tune of Terror":"You scream a blasphemous melody at your foe."
    "Leech's Lymeric":"You tell a darkly humorous joke. It rhymes."
    "Ballad of Dawnbreak":"You perform a reverent ballad."
    "Lina's Lullaby":"You trill a soothing lullaby in your best sotto voce."
    "Daemon's Dirge":"You drone the hethenous funeral song of a fallen daemon."
} -> mv:AttackText

//Item flavor text
Dictionary {
    "Stone" : "You found a Smooth Stone! It's worthless."
    "Bread" : "You found a piece of Stale Bread! (Gained 1 HP)"
    "Cheese" : "You found a morsel of Cheese! (Gained 1 HP)"
    "Potion" : "You found a Potion! (Gained 5 HP)"
    "Codex" : "You found an Arcane Codex! (Gained 1 Magic)"
    "Crystal" : "You found a Crystal Ball! (Gained 2 Magic)"
    "Herb" : "You found a Thieve's Thistle! (Gained 1 Dexterity)"
    "Vial" : "You found a Vial of Secrecy! (Gained 2 Dexterity)"
    "Whetstone" : "You found a Whetstone! (Gained 1 Strength)"
    "Totem" : "You found a Totem of Power! (Gained 2 Strength)"
    "Helm" : "You found a Warrior's Helm! (Gained 1 Armor)"
    "Chestplate" : "You found a Hero's Chestplate! (Gained 2 Armor)"
    "Shawl" : "You found a Mystic Shawl! (Gained 1 Resistance)"
    "Salve" : "You found a Warding Salve! (Gained 2 Resistance)"
    "Clover" : "You found a Four-Leaf Clover! (Gained 1 Luck)"
    "RabbitsFoot" : "You found a Rabbit's Foot! (Gained 2 Luck)"
} -> mv:FlavorText

//Scenario text
List [
    "a twisting corridor"
    "a narrow passageway"
    "a vast banquet hall"
    "a small room"
    "a musty dungeon cell"
    "a dingy barrack"
] -> mv:RoomList
List [
    "chest"
    "box"
    "decorative urn"
    "pile of books"
    "strange device"
    "peculiar shield"
    "mysterious marking"
] -> mv:InterestList
List [
    "sitting in the corner"
    "by the exit"
    "on a shelf"
    "leaned against the far wall"
    "shoved under a table"
    "tucked in an alcove"
    "on a pedestal"
    "just to your left"
    "under some rubble"
] -> mv:LocationList

//Hints
List [
    "\"Twice they burn. Twice they freeze. Thrice are they poisoned. Once do they sleep.\""
    "\"The theif that sneaks through darkened halls will find, she most succeeds when foes are not as lithe.\""
    "\"Swords and knives on armor do desist, but spells and charms you must learn to resist.\""
    "\"Measure not your skill in damage wrought, but by the pace at which your fights are fought.\""
    "\"A hoarder finds their treasure can be bought. A killer finds their powers can be taught.\""
    "\"Waters slow when blizzards blow. Old bones rest where embers glow.\""
] -> mv:Hints

//// GAME SETTINGS ////////////////

//Class stats
@set statsWarrior @{
    Dictionary {
        "HP":15
        "STR":3
        "DEX":1
        "MAG":0
        "ARM":2
        "RES":0
        "CRIT":2
        "LUCK":0
        "AttackList":["Sword Strike" "Mighty Counter"]
    }
}
@set statsThief @{
    Dictionary {
        "HP":15
        "STR":0
        "DEX":3
        "MAG":0
        "ARM":1
        "RES":1
        "CRIT":2
        "LUCK":1
        "AttackList":["Swift Stab" "Tricky Step"]
    }
}
@set statsMagician @{
    Dictionary {
        "HP":15
        "STR":0
        "DEX":1
        "MAG":3
        "ARM":0
        "RES":2
        "CRIT":2
        "LUCK":0
        "AttackList":["Ancient Fire" "Hellfrost"]
    }
}
@set statsBard @{
    Dictionary {
        "HP":15
        "STR":0
        "DEX":2
        "MAG":2
        "ARM":1
        "RES":1
        "CRIT":2
        "LUCK":1
        "AttackList":["Chorus of Chaos" "Confusing Chord"]
    }
}
//Enemy Stats
Dictionary {
    "Skeleton" : {
        "Name":"Skeleton"
        "HP":3
        "STR":2
        "DEX":1
        "MAG":0
        "ARM":1
        "RES":0
        "Class":"Warrior"
        "Weak": {"Fire":2 "Ice":1 "Holy":1}
        "AttackText":"The Skeleton swings its rusty sword at you!"
        "Gold":[2 2 2 2 2 3 3 3 3 5]
    }
    "Goblin" : {
        "Name":"Goblin"
        "HP":3
        "STR":0
        "DEX":2
        "MAG":0
        "ARM":0
        "RES":0
        "Class":"Thief"
        "Weak": {"Fire":1 "Ice":1 "Holy":1}
        "AttackText":"The Goblin rakes you with its razor sharp claws!"
        "Gold":[2 2 2 2 2 3 3 3 3 5]
    }
    "Slug" : {
        "Name":"Flesh-Eating Slug"
        "HP":3
        "STR":0
        "DEX":1
        "MAG":2
        "ARM":0
        "RES":1
        "Class":"Magician"
        "Weak": {"Fire":1 "Ice":2 "Holy":1}
        "AttackText":"The Flesh-Eating Slug gnaws at you!"
        "Gold":[2 2 2 2 2 3 3 3 3 5]
    }
    "Hobgoblin" : {
        "Name":"Hobgoblin"
        "HP":5
        "STR":0
        "DEX":3
        "MAG":0
        "ARM":1
        "RES":1
        "Class":"Thief"
        "Weak": {"Fire":1 "Ice":1 "Holy":1}
        "AttackText":"The Hobgoblin swipes at you with its shiv!"
        "Gold":[3 3 3 3 3 5 5 5 5 7]
    }
    "Slime" : {
        "Name":"Slime"
        "HP":5
        "STR":0
        "DEX":1
        "MAG":3
        "ARM":0
        "RES":2
        "Class":"Magician"
        "Weak": {"Fire":1 "Ice":2 "Holy":1}
        "AttackText":"The Slime lunges at you!"
        "Gold":[3 3 3 3 3 5 5 5 5 7]
    }
    "Night Orc" : {
        "Name":"Night Orc"
        "HP":5
        "STR":3
        "DEX":1
        "MAG":0
        "ARM":2
        "RES":0
        "Class":"Warrior"
        "Weak": {"Fire":1 "Ice":1 "Holy":1}
        "AttackText":"The Night Orc swings its heavy blade at you!"
        "Gold":[3 3 3 3 3 5 5 5 5 7]
    }
    "Dark Wizard" : {
        "Name":"Dark Wizard"
        "HP":7
        "STR":0
        "DEX":2
        "MAG":4
        "ARM":1
        "RES":3
        "Class":"Magician"
        "Weak": {"Fire":1 "Ice":1 "Holy":2}
        "AttackText":"The Dark Wizard mutters an ancient, evil spell."
        "Gold":[5 5 5 5 5 7 7 7 7 9]
    }
    "Minotaur" : {
        "Name":"Minotaur"
        "HP":7
        "STR":4
        "DEX":2
        "MAG":0
        "ARM":3
        "RES":1
        "Class":"Warrior"
        "Weak": {"Fire":1 "Ice":1 "Holy":1}
        "AttackText":"The Minotaur stabs at you with its forked spear."
        "Gold":[5 5 5 5 5 7 7 7 7 9]
    }
    "Shadow Elf" : {
        "Name":"Shadow Elf"
        "HP":7
        "STR":0
        "DEX":4
        "MAG":0
        "ARM":2
        "RES":2
        "Class":"Thief"
        "Weak": {"Fire":2 "Ice":1 "Holy":1}
        "AttackText":"The Shadow Elf launches an arrow at you from the darkness!"
        "Gold":[5 5 5 5 5 7 7 7 7 9]
    }
    "Fire Sprite" : {
        "Name":"Fire Sprite"
        "HP":9
        "STR":0
        "DEX":3
        "MAG":5
        "ARM":2
        "RES":4
        "Class":"Magician"
        "Weak": {"Fire":0.5 "Ice":2 "Holy":1}
        "AttackText":"The Fire Sprite shoots a jet of flame at you!"
        "Gold":[7 7 7 7 7 9 9 9 9 11]
    }
    "Ice Pixie" : {
        "Name":"Ice Pixie"
        "HP":10
        "STR":0
        "DEX":3
        "MAG":5
        "ARM":2
        "RES":4
        "Class":"Magician"
        "Weak": {"Fire":2 "Ice":0.5 "Holy":1}
        "AttackText":"The Ice Pixie buffets you with an icy blast!"
        "Gold":[7 7 7 7 7 9 9 9 9 11]
    }
    "Void Halfling" : {
        "Name":"Void Halfling"
        "HP":10
        "STR":0
        "DEX":5
        "MAG":0
        "ARM":3
        "RES":3
        "Class":"Thief"
        "Weak": {"Fire":1 "Ice":1 "Holy":1}
        "AttackText":"The Void Halfling draws from its pipe and winks at you!"
        "Gold":[7 7 7 7 7 9 9 9 9 11]
    }
    "Demon Soldier" : {
        "Name":"Demon Soldier"
        "HP":10
        "STR":5
        "DEX":3
        "MAG":0
        "ARM":4
        "RES":2
        "Class":"Warrior"
        "Weak": {"Fire":1 "Ice":1 "Holy":2}
        "AttackText":"The Demon Soldier slashes at you with its twin blades!"
        "Gold":[7 7 7 7 7 9 9 9 9 11]
    }
} -> mv:EnemyStats

//Item functions
Dictionary {
    "Stone" : {"Stat":"HP" "Value":0}
    "Bread" : {"Stat":"HP" "Value":1}
    "Cheese" : {"Stat":"HP" "Value":1}
    "Potion" : {"Stat":"HP" "Value":5}
    "Codex" : {"Stat":"MAG" "Value":1}
    "Crystal" : {"Stat":"MAG" "Value":2}
    "Herb" : {"Stat":"DEX" "Value":1}
    "Vial" : {"Stat":"DEX" "Value":2}
    "Whetstone" : {"Stat":"STR" "Value":1}
    "Totem" : {"Stat":"STR" "Value":2}
    "Helm" : {"Stat":"ARM" "Value":1}
    "Chestplate" : {"Stat":"ARM" "Value":2}
    "Shawl" : {"Stat":"RES" "Value":1}
    "Salve" : {"Stat":"RES" "Value":2}
    "Clover" : {"Stat":"LUCK" "Value":1}
    "RabbitsFoot" : {"Stat":"LUCK" "Value":2}
} -> mv:ItemData

//Difficulty spawn/drop rates
Dictionary {
    "Easy" : {
        "Event" : ["Enemy"]
        "Enemy" : ["Skeleton" "Skeleton" "Goblin" "Goblin" "Slug" "Slug" "Night Orc" "Hobgoblin" "Slime"]
        "Item" : ["Stone" "Stone" "Bread" "Bread" "Cheese" "Cheese" "Potion" "Codex" "Herb" "Whetstone"]
        "Gold" : [5 5 5 5 5 7 7 7 7 9]
    }
    "Normal" : {
        "Event" : ["Enemy" "Enemy" "Enemy" "Enemy" "Ambush"]
        "Enemy" : ["Skeleton" "Goblin" "Slug" "Hobgoblin" "Hobgoblin" "Hobgoblin" "Slime" "Slime" "Slime" "Night Orc" "Night Orc" "Night Orc"]
        "Item" : ["Stone" "Bread" "Bread" "Cheese" "Potion" "Codex" "Herb" "Whetstone" "Helm" "Shawl" "Clover"]
        "Gold" : [7 7 7 7 7 9 9 9 9 11]
    }
    "Hard" : {
        "Event" : ["Enemy" "Enemy" "Enemy" "Enemy" "Enemy" "Enemy" "Enemy" "Ambush" "Ambush" "Ambush"]
        "Enemy" : ["Hobgoblin" "Slime" "Night Orc" "Dark Wizard" "Dark Wizard" "Minotaur" "Minotaur" "Shadow Elf" "Shadow Elf"]
        "Item" : ["Bread" "Cheese" "Potion" "Potion" "Potion" "Codex" "Codex" "Herb" "Herb" "Whetstone" "Whetstone" "Helm" "Helm" "Shawl" "Shawl" "Clover" "Clover" "Crystal" "Vial" "Totem" "Chestplate" "Salve" "RabbitsFoot"]
        "Gold" : [9 9 9 9 9 11 11 11 11 13]
    }
    "Harder" : {
        "Event" : ["Enemy" "Enemy" "Enemy" "Ambush" "Ambush"]
        "Enemy" : ["Dark Wizard" "Dark Wizard" "Minotaur" "Minotaur" "Shadow Elf" "Shadow Elf" "Fire Sprite" "Ice Pixie" "Void Halfling" "Void Halfling" "Demon Soldier" "Demon Soldier"]
        "Item" : ["Cheese" "Potion" "Potion" "Potion" "Potion" "Codex" "Herb" "Whetstone" "Helm" "Shawl" "Clover" "Crystal" "Crystal" "Vial" "Vial" "Totem" "Totem" "Chestplate" "Chestplate" "Salve" "Salve" "RabbitsFoot" "RabbitsFoot"]
        "Gold" : [11 11 11 11 11 13 13 13 13 15]
    }
    "Final" : {
        "Event" : ["Enemy" "Ambush" "Ambush" "Ambush" "Ambush"]
        "Enemy" : ["Fire Sprite" "Ice Pixie" "Void Halfling" "Void Halfling" "Demon Soldier" "Demon Soldier"]
        "Item" : ["Potion" "Potion" "Potion" "Potion" "Potion" "Crystal" "Vial" "Totem" "Chestplate" "Salve" "RabbitsFoot" "Crystal" "Vial" "Totem" "Chestplate" "Salve" "RabbitsFoot" "Crystal" "Vial" "Totem" "Chestplate" "Salve" "RabbitsFoot"]
        "Gold" : [13 13 13 13 13 15 15 15 15 17]
    }
} -> mv:DropRates

//// GAME START ////////////////

//Intro
@:textIntro1
List [@:textChooseWarrior @:textChooseThief @:textChooseMagician @:textChooseBard]
chooseFromMenu @:promptChooseClass
    case @:textChooseWarrior
        text "Warrior" -> v:Class
        showResult "\"Oh a mighty Warrior eh? A hero of great renown? Ugh. A fool, that's what you are. Beware the sound of steel and bone! If you hear it drawing near... run.\""
        @:statsWarrior
        setVariable v:Stats
    case @:textChooseThief
        text "Thief" -> v:Class
        showResult "\"Ugh. Good for nothin' Thief. I oughta kill you where you stand! But the Crypt will handle that, won't it? Mark my words, when you hear the sound of steel and bone creeping up in the darkness, your time is up.\""
        @:statsThief
        setVariable v:Stats
    case @:textChooseMagician
        text "Magician" -> v:Class
        showResult "\"Oh a Magician are you? A great scholar no doubt. Your books and ancient gibberish won't be enough to save you in there. Mind the sound of steel and bone, stalking you in the dark. Flee, if you care for breathin'.\""
        @:statsMagician
        setVariable v:Stats
    case @:textChooseBard
        text "Bard" -> v:Class
        showResult "\"A lute?? Ha! That's rich. You're going to die, Bard. Sing all the songs you wish, but there's already a Noise in that Crypt. And trust me, it sounds nothing like music.\""
        @:statsBard
        setVariable v:Stats
end Menu
showResult "\"If you hear the Noise coming, run.\""
showResult "He spits scornfully on the cobbled pathway, turns, and hobbles away. You look back to the grim archway."
chooseFromMenu "Dare you enter?" ["Into the Crypt!", "I dare not..."]
    case
        showResult "Step by step, you descend into the darkness."
    case
        showResult "A shiver runs down your spine. Swallowing your pride, you follow after the grave keeper."
        exitShortcut
end

//Initialize gold
number 0 -> v:Gold

//Initiate dungeon loop
number 1 -> v:Level
number 7 -> v:Turn
number 15 -> v:Floors
getVariable mv:false -> v:Dead
text "Easy" -> v:Difficulty
number 0 -> v:KillCount
number 0 -> v:ItemCount
getVariable mv:false -> v:Upgrade1
getVariable mv:false -> v:Upgrade2
getVariable mv:false -> v:Upgrade3
//set floors for difficulty change
number 4 -> v:NormalFloor
number 7 -> v:HardFloor
number 10 -> v:HarderFloor
number 13 -> v:FinalFloor

repeat v:Floors

    //Set floor difficulty
    v:Level
    if Equals v:NormalFloor
        showResult @:textDifficultyNormal
        text "Normal" -> v:Difficulty
    @elseif Equals v:HardFloor
        showResult @:textDifficultyHard
        text "Hard" -> v:Difficulty
    @elseif Equals v:HarderFloor
        showResult @:textDifficultyHarder
        text "Harder" -> v:Difficulty
    @elseif Equals v:FinalFloor
        showResult @:textDifficultyFinal
        text "Final" -> v:Difficulty
    end
    
    //Set up room scenario
    mv:DropRates
    getDictionaryValue Value v:Difficulty -> mv:RoomRates
    mv:RoomRates:"Event"
    getItemFromList RandomItem -> v:Event
    mv:RoomRates:"Enemy"
    getItemFromList RandomItem -> v:Enemy
    mv:RoomRates:"Item"
    getItemFromList RandomItem -> v:Item
    mv:RoomRates:"Gold"
    getItemFromList RandomItem -> v:RoomGold
    mv:RoomList
    getItemFromList RandomItem -> v:Setting
    mv:InterestList
    getItemFromList RandomItem -> v:Interest
    mv:LocationList
    getItemFromList RandomItem -> v:Location
    
    //Set up enemy
    mv:EnemyStats
    getDictionaryValue Value v:Enemy -> mv:CurrentEnemy
    getDictionaryValue Value "HP" -> v:EnemyHP
    text "None" -> v:EnemyStatus
    
    //Initiate turn cycle
    text "Choose" -> v:State
    getVariable mv:false -> v:HasInvestigated
    getVariable mv:false -> v:KilledEnemy
    getVariable mv:false -> v:SnuckPast
    number -1 -> v:EnemyStatusTimer
    
    //Prompt scenario to player
    v:Event
    if Equals "Enemy"
        @:showEventEnemy
    @elseif Equals "Ambush"
        @:showEventAmbush
        text "Fight" -> v:State
    end
    
    repeat v:Turn
        
        //Reset turn actions
        getVariable mv:false -> v:SneakAttack
        
        //Action menu
        v:State
        if Equals "Choose"
            
            //Populate options menu
            List [] -> v:Options
            v:KilledEnemy
            if Equals mv:false
                v:SnuckPast
                if Equals mv:false
                    List [@:menuFight, @:menuSneak]
                    addToVariable v:Options
                else
                    List [@:menuSneakAttack]
                    addToVariable v:Options
                    v:HasInvestigated
                    if Equals mv:false
                        List [@:menuInvestigate]
                        addToVariable v:Options
                    end
                end
            else
                v:HasInvestigated
                if Equals mv:false
                    List [@:menuInvestigate]
                    addToVariable v:Options
                end
            end
            List [@:menuExit]
            addToVariable v:Options
            
            //Choose option, set game state
            chooseFromList @:menuActionPrompt -> mv:Choice
            if Equals @:menuFight
                text "Fight" -> v:State
            @elseif Equals @:menuSneak
                text "Sneak" -> v:State
            @elseif Equals @:menuSneakAttack
                text "Fight" -> v:State
                getVariable mv:true -> v:SneakAttack
            @elseif Equals @:menuInvestigate
                text "Investigate" -> v:State
            @elseif Equals @:menuExit
                text "Exit" -> v:State
            end
            
        end
        
        //Run game state
        v:State
        if Equals "Fight"
        
            //update enemy status
            v:EnemyStatusTimer
            Calculate "-" 1 -> v:EnemyStatusTimer
            if Equals 0
                text "None" -> v:EnemyStatus
            end
            
            //initiate flags
            getVariable mv:false -> v:voidenemyattack
            getVariable mv:false -> v:break
            
            //player turn
            @:Attack
            
            //enemy turn
            v:break
            if Equals mv:false
                v:EnemyStatus
                if Equals "Freeze"
                    getVariable mv:true -> v:voidenemyattack
                end
                v:voidenemyattack
                if Equals mv:false
                    @:enemyAttack
                end
            end
            
            //show delayed player turn if applicable
            v:break
            if Equals mv:false
                v:playerTurnDelayed
                @:showList
                v:EnemyHP
                if IsLessThan 1
                    getVariable mv:true -> v:break
                end
            end
            
            //passive turn
            v:break
            if Equals mv:false
                @:enemyStatus
            end
            
            //enemy die
            v:EnemyHP
            if IsLessThan 1
                @:enemyDie
            end
            
        @elseif Equals "Sneak"
        
            showResult "You creep slowly through the darkness..."
            mv:CurrentEnemy
            getDictionaryValue Value "DEX"
            Calculate "+" v:Stats:DEX -> mv:DEXroll
            randomNumber 0 mv:DEXroll
            if IsLessThan v:Stats:DEX
                //successful sneak
                showResult "You snuck past the enemy!"
                getVariable mv:true -> v:SnuckPast
                text "Choose" -> v:State
                @:showInterest
            else
                //failed sneak
                showResult "The \(mv:CurrentEnemy:"Name") spotted you!"
                text "Fight" -> v:State
                @:enemyAttack
            end
            
        @elseif Equals "Investigate"
        
            showResult "You inspect the \(v:Interest)..."
            //get item effects
            mv:ItemData
            getDictionaryValue Value v:Item -> v:ItemInfo
            v:ItemInfo:"Stat"
            setVariable v:ItemStat
            v:ItemInfo:"Value"
            setVariable v:ItemValue
            //calculate new value
            v:Stats
            getDictionaryValue Value v:ItemStat -> v:OldValue
            Calculate "+" v:ItemValue -> v:NewValue
            //show flavor text
            mv:FlavorText
            getDictionaryValue Value v:Item
            showResult
            v:Item
            if Equals "Stone"
                showResult "There's an inscription..."
                mv:Hints
                getItemFromList RandomItem
                showResult
            end
            //write to stats
            v:Stats
            setDictionaryValue v:ItemStat v:NewValue -> v:Stats
            //gold
            v:Gold
            Calculate "+" v:RoomGold -> v:Gold
            showResult "You found \(v:RoomGold) gold!"
            //reset turn menu
            text "Choose" -> v:State
            getVariable mv:true -> v:HasInvestigated
            v:ItemCount
            Calculate "+" 1 -> v:ItemCount
            
        @elseif Equals "Exit"
        
            showResult "You head toward the door..."
            getVariable mv:true -> v:ExitSuccess
            v:KilledEnemy
            if Equals mv:false
                v:SnuckPast
                if Equals mv:false
                    v:Stats:"LUCK"
                    Calculate "+" 1  -> v:odds
                    randomNumber 0 20
                    if IsGreaterThan v:odds
                        showResult "...but you ran right into the \(mv:CurrentEnemy:"Name")!"
                        text "Fight" -> v:State
                        @:enemyAttack
                        getVariable mv:false -> v:ExitSuccess
                    else
                        showResult "...creep quietly past the \(mv:CurrentEnemy:"Name")..."
                    end
                end
            end
            v:ExitSuccess
            if Equals mv:true
                showResult "...and descend to floor \(Calculate ^(v:Level) "+" 1)"
                text "End" -> v:State
            end
            
        end
        
        ////after each turn
        
        //check if dead
        v:Stats:"HP"
        if IsLessThan 1
            v:Dead
            if Equals mv:false
                //dead
                @:showDead
                text "End" -> v:State
                getVariable mv:true -> v:Dead
            end
        end
        
        //the Noise
        v:State
        if Equals "End"
            Nothing
        else
            v:Turn
            Calculate "-" 1 -> v:Turn
            if Equals 1
                showResult @:textNoise5
            @elseif Equals 2
                showResult @:textNoise4
            @elseif Equals 3
                showResult @:textNoise3
            @elseif Equals 4
                showResult @:textNoise2
            @elseif Equals 5
                showResult @:textNoise1
            end
        end
        
    end
    //after all turns
    v:State
    if Equals "End"
        v:Level
        Calculate "+" 1 -> v:Level
        v:Turn
        Calculate "+" 3 -> v:Turn
    else
        getVariable mv:true -> v:Dead
    end
    v:Dead
    if Equals mv:true
        @:textNoise6
        exitShortcut
    end
    //Upgrades
    v:KillCount
    if Equals 4
        v:Upgrade1
        if Equals mv:false
            @:Upgrade1
        end
    @elseif Equals 7
        v:Upgrade2
        if Equals mv:false
            @:Upgrade2
        end
    @elseif Equals 10
        v:Upgrade3
        if Equals mv:false
            @:Upgrade3
        end
    @elseif ^(v:ItemCount) Equals 8
        //STORE
        showResult "[DEBUG MESSAGE] Gold: \(v:Gold)"
    end
end

//Ending
showResult @:textEnding1
chooseFromMenu @:menuActionPrompt [@:menuInvestigate @:menuExit]
    case
        showResult @:textEndingInvestigate
    case
        showResult @:textEndingExit
end
@:textEnding2
exitShortcut

Comment
| Into the Crypt v0.9.0
| by Josh Guerrero
Comment
| Thank you for downloading.
|
| 
| If you don't want spoilers, don't scroll up!